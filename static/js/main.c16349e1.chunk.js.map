{"version":3,"sources":["serviceWorker.js","Context/playerContext.js","Components/Header.js","Context/songs.js","Components/PlayList.js","Components/Controls.js","Context/playerReducer.js","Context/types.js","Context/playerState.js","AudioPlayer.js","index.js"],"names":["Boolean","window","location","hostname","match","playerContext","createContext","Header","songsArr","Playlist","useContext","SetCurrent","currentSong","songs","useState","searchTerm","setSearchTerm","filterData","setSearchResults","useEffect","results","filter","song","toLowerCase","includes","className","class","e","target","value","map","i","key","onClick","Controls","nextSong","prevSong","playing","repeat","random","togglePlaying","handleEnd","audio","useRef","statevolum","setStateVolum","dur","setDur","currentTime","setCurrentTime","fmtMSS","s","toggleAudio","current","paused","play","pause","volume","onTimeUpdate","onCanPlay","duration","onEnded","ref","type","preload","src","Math","round","name","id","onChange","q","compute","state","action","data","PlayerState","props","initialState","useReducer","playerReducer","dispatch","length","Provider","songsSet","songArr","children","AudioPlayer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8MAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,UCdSC,EAFOC,0BCWPC,I,cCbFC,EAAW,CACpB,CACE,iBACA,qHACA,SACA,QAEF,CACE,UACA,yFACA,kBACA,OAEF,CACE,aACA,kGACA,SACA,QAEF,CACE,iBACA,yGACA,cACA,QAEF,CACE,SACA,6EACA,OACA,SCiDSC,MAzEf,WAAqB,IAAD,IAC0BC,qBAAWL,GAA/CM,EADU,EACVA,WAAYC,EADF,EACEA,YAAcC,EADhB,EACgBA,MADhB,EAGkBC,mBAAS,IAH3B,mBAGXC,EAHW,KAGCC,EAHD,OAIqBF,mBAAS,IAJ9B,mBAIXG,EAJW,KAICC,EAJD,KA0BlB,OAPAC,qBAAU,WACR,IAAMC,EAAUP,EAAMQ,QAAO,SAAAC,GAAI,OAC/BA,EAAK,GAAGC,cAAcC,SAAST,MAEjCG,EAAiBE,KAChB,CAACL,IAGF,yBAAKU,UAAU,YACb,yBAAKA,UAAU,UAEb,uBAAGA,UAAU,mBACb,0BAAMA,UAAU,UAAhB,cAED,yBAAKC,MAAM,cACZ,yBAAKD,UAAU,kBAEb,8BACAA,UAAU,gBADV,0BAEY,SAFZ,0BAxBqB,SAAAE,GACzBX,EAAcW,EAAEC,OAAOC,UAuBnB,sBAIQd,GAJR,qBAKO,QALP,4BAOc,qBAPd,MAWF,wBAAIU,UAAU,kBACXR,EAAWa,KAAI,SAACR,EAAMS,GAAP,OACd,wBACEN,UAAW,mCAAqCb,IAAgBmB,EAAI,WAAa,IACjFC,IAAKD,EACLE,QAAS,WACPtB,EAAWoB,KAId,uBAAGN,UAAU,QAAb,KAAsB,uBAAGA,UAAU,iBAAnC,KAAyDH,EAAK,GAA9D,OAAsEA,EAAK,WC2BvEY,MAtFf,WAAoB,MAcdxB,qBAAWL,GAVbO,EAJgB,EAIhBA,YACAC,EALgB,EAKhBA,MACAsB,EANgB,EAMhBA,SACAC,EAPgB,EAOhBA,SAGAC,GAVgB,EAQhBC,OARgB,EAShBC,OATgB,EAUhBF,SACAG,EAXgB,EAWhBA,cACAC,EAZgB,EAYhBA,UAIIC,EAAQC,iBAAO,aAhBH,EAmBkB7B,mBAAS,IAnB3B,mBAmBX8B,EAnBW,KAmBCC,EAnBD,OAoBI/B,mBAAS,GApBb,mBAoBXgC,EApBW,KAoBNC,EApBM,OAqBoBjC,mBAAS,GArB7B,mBAqBXkC,EArBW,KAqBEC,EArBF,KAuBZC,EAAS,SAACC,GAAQ,OAAQA,GAAKA,GAAK,KAAO,IAAM,EAAIA,EAAI,IAAM,QAAWA,GAE1EC,EAAc,kBAAMV,EAAMW,QAAQC,OAASZ,EAAMW,QAAQE,OAASb,EAAMW,QAAQG,SAmBtF,OANArC,qBAAU,WACRuB,EAAMW,QAAQI,OAASb,EACnBP,GAAWe,MAEd,CAACxC,IAGF,yBAAKa,UAAU,YACb,2BAEEiC,aAAc,SAAC/B,GAAD,OAAOsB,EAAetB,EAAEC,OAAOoB,cAC7CW,UAAW,SAAChC,GAAD,OAAOoB,EAAOpB,EAAEC,OAAOgC,WAClCC,QAASpB,EAETqB,IAAKpB,EACLqB,KAAK,aACLC,QAAQ,OACRC,IAAKpD,EAAMD,GAAa,KAE1B,yBAAKa,UAAU,QAEb,0BAAMA,UAAU,SAAQ,uBAAGA,UAAU,wBACrC,2BAAOI,MAAOqC,KAAKC,MAAmB,IAAbvB,GAAmBmB,KAAK,QAAQK,KAAK,SAASC,GAAG,SAASC,SAAU,SAAC3C,GAAD,OAjC7E4C,EAiCiG5C,EAAEC,OAAOC,MAAQ,IAhCtIgB,EAAc0B,QACd7B,EAAMW,QAAQI,OAASc,GAFJ,IAACA,MAoClB,yBAAK9C,UAAU,iBACb,0BAAMA,UAAU,OAAOQ,QAASG,GAAU,uBAAGX,UAAU,0BAEvD,0BAAMA,UAAU,OAAOQ,QAAS,WAAQO,IAAiBY,MACvD,0BAAM3B,UAAYY,EAAe,OAAL,IAAa,uBAAGZ,UAAU,iBACtD,0BAAMA,UAAYY,EAAmB,GAAT,QAAa,uBAAGZ,UAAU,mBAGxD,0BAAMA,UAAU,OAAOQ,QAASE,GAAU,uBAAGV,UAAU,0BAEzD,yBAAKA,UAAU,aACb,0BAAMA,UAAU,YAAYyB,EAAOF,IACnC,2BACEsB,SA5Ce,SAAC3C,GACtB,IAAI6C,EAAW7C,EAAEC,OAAOC,MAAQiB,EAAO,IACvCG,EAAeuB,GACf9B,EAAMW,QAAQL,YAAcwB,GA0CtB3C,MAAOiB,EAAqB,IAAdE,EAAqBF,EAAM,EACzCiB,KAAK,QAAQK,KAAK,aAAaC,GAAG,WACpC,0BAAM5C,UAAU,UAAUyB,EAAOJ,O,OC5ExB,WAAC2B,EAAOC,GACrB,OAAQA,EAAOX,MACb,ICNyB,kBDOvB,OAAO,2BACFU,GADL,IAEE5D,MAAO6D,EAAOC,OAElB,ICb0B,mBDcxB,OAAO,2BACFF,GADL,IAEE7D,YAAa8D,EAAOC,KACpBtC,SAAS,IAGb,ICnBwB,iBDoBtB,OAAO,2BACFoC,GADL,IAEEpC,QAASqC,EAAOC,OAEpB,QACE,OAAOF,IEwEAG,EArFK,SAACC,GACnB,IAAMC,EAAe,CACnBlE,YAAa,EACbC,MAAOL,EACP8B,QAAQ,EACRC,QAAQ,EACRF,SAAS,EACTK,MAAO,MAPoB,EASHqC,qBAAWC,EAAeF,GATvB,mBAStBL,EATsB,KASfQ,EATe,KAkBvBtE,EAAa,SAAC0D,GAAD,OAAQY,EAAS,CAAElB,KD/BR,mBC+BgCY,KAAMN,KAY9DlC,EAAW,WACXsC,EAAM7D,cAAgB6D,EAAM5D,MAAMqE,OAAS,EAC7CvE,EAAW,GAEXA,EAAW8D,EAAM7D,YAAc,IA0BnC,OACE,kBAAC,EAAcuE,SAAf,CACEtD,MAAO,CACLjB,YAAa6D,EAAM7D,YACnBC,MAAO4D,EAAM5D,MACbyB,OAAQmC,EAAMnC,OACdC,OAAQkC,EAAMlC,OACdF,QAASoC,EAAMpC,QACfK,MAAO+B,EAAM/B,MACbP,WACAC,SAhDW,WACW,IAAtBqC,EAAM7D,YACRD,EAAW8D,EAAM5D,MAAMqE,OAAS,GAEhCvE,EAAW8D,EAAM7D,YAAc,IA6C7BD,aACA6B,cAzDgB,kBACpByC,EAAS,CAAElB,KD5Be,iBC4BOY,MAAMF,EAAMpC,WAyDzCI,UAhCY,WAEhB,GAAIgC,EAAMlC,OACR,OAAO0C,EAAS,CACdlB,KD1DwB,mBC2DxBY,QAAST,KAAK3B,SAAWkC,EAAM5D,MAAMqE,UAGvC,GAAIT,EAAMnC,OACRH,QACK,IAAIsC,EAAM7D,cAAgB6D,EAAM5D,MAAMqE,OAAS,EACpD,OAEA/C,MAoBAiD,SA9DW,SAACC,GAAD,OACfJ,EAAS,CAAElB,KDxBgB,kBCwBOY,KAAMU,OAmErCR,EAAMS,W,MCtEEC,MAdf,WACE,OACE,kBAAC,EAAD,KACE,yBAAK9D,UAAU,QAET,kBAAC,EAAD,MAEA,kBAAC,EAAD,SCTZ+D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACA,kBAAC,EAAD,OAEAC,SAASC,eAAe,SVwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.c16349e1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createContext } from 'react';\r\n\r\nconst playerContext = createContext();\r\n\r\nexport default playerContext;","import React, { useContext } from 'react'\r\nimport playerContext from '../Context/playerContext';\r\n\r\nfunction Header() {\r\n  const { currentSong, songs } = useContext(playerContext)\r\n\r\n  return (\r\n    <header >\r\n      <h3>Now Playing: {songs[currentSong][0]}</h3>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","export const songsArr = [\r\n    [\r\n      'Endless Summer',\r\n      \"http://nilepromotion.com/abanob/wp-content/uploads/2019/07/Oceana-Endless-Summer-Official-Video-UEFA-EURO-2012.mp3\",\r\n      'Oceana',\r\n      '4.86'\r\n    ],\r\n    [\r\n      'Thunder',\r\n      \"http://nilepromotion.com/abanob/wp-content/uploads/2019/07/Imagine-Dragons-Thunder.mp3\",\r\n      \"Imagine Dragons\",\r\n      '3.4'\r\n    ],\r\n    [\r\n      'Not Afraid',\r\n      'http://nilepromotion.com/abanob/wp-content/uploads/2019/07/Eminem-Not-Afraid-Official-Video.mp3',\r\n      \"Eminem\",\r\n      '4.31'\r\n    ],\r\n    [\r\n      'Real all About',\r\n      'http://nilepromotion.com/abanob/wp-content/uploads/2019/07/Emeli-Sandé-Read-all-about-it-Lyrics.mp3',\r\n      \"Emeli Sande\",\r\n      '4.85'\r\n    ],\r\n    [\r\n      'Lonely',\r\n      'http://nilepromotion.com/abanob/wp-content/uploads/2019/07/Akon-Lonely.mp3',\r\n      \"Akon\",\r\n      '4.41'\r\n    ],\r\n   \r\n  ]\r\n  ","import React, { useContext ,useState ,useEffect} from 'react'\r\nimport playerContext from '../Context/playerContext';\r\nimport { songsArr } from '../Context/songs';\r\n\r\n\r\nfunction Playlist() {\r\n  const { SetCurrent, currentSong , songs } = useContext(playerContext)\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [filterData, setSearchResults] = useState([]);\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  const handleSearchChange = e => {\r\n    setSearchTerm(e.target.value);\r\n  \r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const results = songs.filter(song =>\r\n      song[0].toLowerCase().includes(searchTerm)\r\n    );\r\n    setSearchResults(results);\r\n  }, [searchTerm, ]);\r\n\r\n  return (\r\n    <div className=\"playlist\">\r\n      <div className=\"header\">\r\n     \r\n        <i className=\"fas fa-list-ul\"></i>\r\n        <span className=\"pltext\">Play List</span>\r\n      </div>\r\n       <div class=\"form-group\">\r\n      <div className=\"container form\"> \r\n  \r\n        <input\r\n        className=\"form-control\"\r\n          className=\"input\"\r\n          onChange={handleSearchChange}\r\n         value={searchTerm}\r\n          type=\"text\"\r\n        \r\n          placeholder=\"Search your track\"\r\n        />\r\n      </div>\r\n    </div> \r\n      <ul className=\"loi list-group\">\r\n        {filterData.map((song, i) => (\r\n          <li\r\n            className={' list-group-item songContainer ' + (currentSong === i ? 'selected' : '')}\r\n            key={i}\r\n            onClick={() => {\r\n              SetCurrent(i)\r\n            }}\r\n          >\r\n          \r\n           <p className=\"song\">  <i className=\"fas fa-music\"></i>  {song[0]} -  {song[2]}\r\n               </p>\r\n           \r\n       \r\n        \r\n          \r\n            \r\n           \r\n           \r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Playlist\r\n","import React, { useState, useEffect, useRef, useContext } from 'react'\r\nimport playerContext from '../Context/playerContext'\r\n\r\nfunction Controls() {\r\n\r\n  // Global State\r\n  const {\r\n    currentSong,\r\n    songs,\r\n    nextSong,\r\n    prevSong,\r\n    repeat,\r\n    random,\r\n    playing,\r\n    togglePlaying,\r\n    handleEnd,\r\n\r\n  } = useContext(playerContext)\r\n\r\n  const audio = useRef('audio_tag');\r\n\r\n  // self State\r\n  const [statevolum, setStateVolum] = useState(0.3)\r\n  const [dur, setDur] = useState(0)\r\n  const [currentTime, setCurrentTime] = useState(0)\r\n\r\n  const fmtMSS = (s) => { return (s - (s %= 60)) / 60 + (9 < s ? ':' : ':0') + ~~(s) }\r\n\r\n  const toggleAudio = () => audio.current.paused ? audio.current.play() : audio.current.pause();\r\n\r\n  const handleVolume = (q) => {\r\n    setStateVolum(q);\r\n    audio.current.volume = q;\r\n  }\r\n\r\n  const handleProgress = (e) => {\r\n    let compute = (e.target.value * dur) / 100;\r\n    setCurrentTime(compute);\r\n    audio.current.currentTime = compute\r\n  }\r\n\r\n  useEffect(() => {\r\n    audio.current.volume = statevolum;\r\n    if (playing) { toggleAudio() }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentSong])\r\n\r\n  return (\r\n    <div className=\"controls\">\r\n      <audio\r\n\r\n        onTimeUpdate={(e) => setCurrentTime(e.target.currentTime)}\r\n        onCanPlay={(e) => setDur(e.target.duration)}\r\n        onEnded={handleEnd}\r\n\r\n        ref={audio}\r\n        type=\"audio/mpeg\"\r\n        preload='true'\r\n        src={songs[currentSong][1]} />\r\n\r\n      <div className=\"vlme\">\r\n\r\n        <span className=\"volum\"><i className=\"fas fa-volume-down\"></i></span>\r\n        <input value={Math.round(statevolum * 100)} type=\"range\" name=\"volBar\" id=\"volBar\" onChange={(e) => handleVolume(e.target.value / 100)} />\r\n\r\n      </div>\r\n      <div className=\"musicControls\">\r\n        <span className=\"prev\" onClick={prevSong}><i className=\"fas fa-step-backward\"></i></span>\r\n\r\n        <span className=\"play\" onClick={() => { togglePlaying(); toggleAudio(); }}>\r\n          <span className={!playing ? '' : 'hide'}><i className=\"fas fa-play\"></i></span>\r\n          <span className={!playing ? 'hide' : ''}><i className=\"fas fa-pause\"></i></span>\r\n        </span>\r\n\r\n        <span className=\"next\" onClick={nextSong}><i className=\"fas fa-step-forward\"></i></span>\r\n      </div>\r\n      <div className=\"progressb\">\r\n        <span className=\"currentT\">{fmtMSS(currentTime)}</span>\r\n        <input\r\n          onChange={handleProgress}\r\n          value={dur ? (currentTime * 100) / dur : 0}\r\n          type=\"range\" name=\"progresBar\" id=\"prgbar\" />\r\n        <span className=\"totalT\">{fmtMSS(dur)}</span>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Controls\r\n","import {\r\n    SET_CURRENT_SONG,\r\n    TOGGLE_PLAYING,\r\n    SET_SONGS_ARRAY,\r\n  } from './types'\r\n  \r\n  export default (state, action) => {\r\n    switch (action.type) {\r\n      case SET_SONGS_ARRAY:\r\n        return {\r\n          ...state,\r\n          songs: action.data,\r\n        }\r\n      case SET_CURRENT_SONG:\r\n        return {\r\n          ...state,\r\n          currentSong: action.data,\r\n          playing: true,\r\n        }\r\n \r\n      case TOGGLE_PLAYING:\r\n        return {\r\n          ...state,\r\n          playing: action.data,\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  ","export const SET_CURRENT_SONG = 'SET_CURRENT_SONG'\r\nexport const TOGGLE_PLAYING = 'TOGGLE_PLAYING'\r\nexport const SET_SONGS_ARRAY = 'SET_SONGS_ARRAY'\r\n\r\n","\r\nimport React, { useReducer } from 'react'\r\nimport playerContext from './playerContext'\r\nimport playerReducer from './playerReducer'\r\nimport { songsArr } from './songs'\r\n\r\nimport {\r\n  SET_CURRENT_SONG,\r\n  TOGGLE_PLAYING,\r\n  SET_SONGS_ARRAY,\r\n\r\n} from './types'\r\n\r\nconst PlayerState = (props) => {\r\n  const initialState = {\r\n    currentSong: 0,\r\n    songs: songsArr,\r\n    repeat: false,\r\n    random: false,\r\n    playing: false,\r\n    audio: null,\r\n  }\r\n  const [state, dispatch] = useReducer(playerReducer, initialState)\r\n\r\n  // Set songs array\r\n  const songsSet = (songArr) =>\r\n    dispatch({ type: SET_SONGS_ARRAY, data: songArr })\r\n  // Set playing state\r\n  const togglePlaying = () =>\r\n    dispatch({ type: TOGGLE_PLAYING, data: state.playing ? false : true })\r\n  // Set current song\r\n  const SetCurrent = (id) => dispatch({ type: SET_CURRENT_SONG, data: id })\r\n\r\n\r\n  // Prev song\r\n  const prevSong = () => {\r\n    if (state.currentSong === 0) {\r\n      SetCurrent(state.songs.length - 1)\r\n    } else {\r\n      SetCurrent(state.currentSong - 1)\r\n    }\r\n  }\r\n  // Next song\r\n  const nextSong = () => {\r\n    if (state.currentSong === state.songs.length - 1) {\r\n      SetCurrent(0)\r\n    } else {\r\n      SetCurrent(state.currentSong + 1)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // End of Song\r\n  const handleEnd = () => {\r\n    // Check for random and repeat options\r\n    if (state.random) {\r\n      return dispatch({\r\n        type: SET_CURRENT_SONG,\r\n        data: ~~(Math.random() * state.songs.length),\r\n      })\r\n    } else {\r\n      if (state.repeat) {\r\n        nextSong()\r\n      } else if (state.currentSong === state.songs.length - 1) {\r\n        return\r\n      } else {\r\n        nextSong()\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <playerContext.Provider\r\n      value={{\r\n        currentSong: state.currentSong,\r\n        songs: state.songs,\r\n        repeat: state.repeat,\r\n        random: state.random,\r\n        playing: state.playing,\r\n        audio: state.audio,\r\n        nextSong,\r\n        prevSong,\r\n        SetCurrent,\r\n        togglePlaying,\r\n        handleEnd,\r\n        songsSet,\r\n    \r\n       \r\n\r\n      }}\r\n    >\r\n      {props.children}\r\n    </playerContext.Provider>\r\n  )\r\n}\r\n\r\nexport default PlayerState\r\n","import React from 'react'\r\nimport Header from './Components/Header'\r\nimport Playlist from './Components/PlayList'\r\nimport Controls from './Components/Controls'\r\nimport PlayerState from './Context/playerState'\r\n\r\nimport './App.css';\r\n\r\n\r\nfunction AudioPlayer() {\r\n  return (\r\n    <PlayerState>\r\n      <div className=\"main\">\r\n\r\n            <Controls />\r\n            {/* <Header /> */}\r\n            <Playlist />\r\n      \r\n      </div>\r\n    </PlayerState>\r\n  )\r\n}\r\n\r\nexport default AudioPlayer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport AudioPlayer from './AudioPlayer';\n\nReactDOM.render(\n  <React.StrictMode>\n  <AudioPlayer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}